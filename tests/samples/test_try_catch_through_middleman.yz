package systems.vos.wisey.compiler.tests;

import wisey.lang.IException;
import wisey.lang.IProgram;
import wisey.lang.NString;

model MException implements IException {
  int mValue;

  public int getValue() {
    return mValue;
  }

  public NString* report() override {
    return callstack.reportException(this);
  }
}

controller CThrower {
  public int doThrow() throws MException {
    MException* exception = build(MException).withValue(63).onHeap();
    throw exception;
  }
}

controller CMiddleMan {
  inject CThrower* mThrower;

  public int call() throws MException {
    return mThrower.doThrow();
  } 
}

controller CCatcher {
  inject CMiddleMan* mMiddleMan;

  public int doTryCatch() {
    try {
      return mMiddleMan.call();
    } catch (MException* exception) {
      return exception.getValue();
    }
  }
}

controller CProgram implements IProgram {
  inject CCatcher* mCatcher;

  public int run(immutable string[] arguments) override {
    return mCatcher.doTryCatch();
  }
}

bind(IProgram).to(CProgram);
