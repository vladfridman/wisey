package systems.vos.wisey.compiler.tests;

import wisey.lang.CCallStack;
import wisey.lang.CThreadRunner;
import wisey.lang.IProgram;
import wisey.lang.IThread;

thread TWorker sends int implements IThread {
  inject CThreadRunner* mThreadRunner;
  inject CCallStack* mCallStack;
  state int mMyMessage;

  public void start() {
    mThreadRunner.createThread(this);
  }

  public int waitForResult() {
    mThreadRunner.joinThread();

    return mMyMessage;
  }

  public void work() {
    printout("This is worker thread!\n");
    thread.send(5);
  }

  public int waitForResult() {
    mThreadRunner.joinThread();

    return mMyMessage;
  }

  public void send(int message) {
    mMyMessage = message;
    mThreadRunner.exitThread();
  }

  public CCallStack getCallStack() {
    printout("Getting call stack!\n");
    return mCallStack;
  }
}

controller CProgram implements IProgram {
  inject TWorker* mWorker;

  public int run() {
    printout("Starting worker thread\n");
    mWorker.start();
    int result = mWorker.waitForResult();
    printout("Worker thread started\n");
    printout("Worker thread result: " + result + "\n");

    return result;
  }
}

bind(CProgram).to(IProgram);
