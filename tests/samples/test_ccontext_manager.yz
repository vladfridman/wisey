package systems.vos.wisey.compiler.tests;

import wisey.lang.IProgram;
import wisey.threads.CContextManager;

controller CCar {
  receive string mMake;

  public string getMake() {
    return mMake;
  }
}

controller CContext1 {

}

controller CContext2 {

}

controller CProgram implements IProgram {
  inject CContextManager* mContextManager;
  inject CContext1* mContext1;
  inject CContext2* mContext2;

  public int run(immutable string[] arguments) override {
    string context1 = "context1";
    string context2 = "context2";

    string toyotaMake = "Toyota";
    string bmwMake = "BMW";
    string mecedesMake = "Mercedes";
    CCar* toyota = inject(CCar).withMake(toyotaMake).onHeap(); 
    CCar* bmw = inject(CCar).withMake(bmwMake).onHeap(); 
    CCar* mercedes = inject(CCar).withMake(mecedesMake).onHeap();

    mContextManager.setContext(context1, mContext1);
    mContextManager.setContext(context2, mContext2);
    mContextManager.setInstance(context1, toyotaMake, toyota);
    mContextManager.setInstance(context1, bmwMake, bmw);
    mContextManager.setInstance(context2, mecedesMake, mercedes);

    CCar car = mContextManager.getInstance(context1, toyotaMake);
    printout("In context " + context1 + " looking for " + toyotaMake + " got " + 
      car.getMake() + " back\n");
    car = mContextManager.getInstance(context1, bmwMake);
    printout("In context " + context1 + " looking for " + bmwMake + " got " + 
      car.getMake() + " back\n");

    car = mContextManager.getInstance(context2, mecedesMake);
    printout("In context " + context2 + " looking for " + mecedesMake + " got " + 
      car.getMake() + " back\n");
    
    CCar* replacement = inject(CCar).withMake("Audi").onHeap(); 
    mContextManager.setInstance(context1, bmwMake, replacement);
    car = mContextManager.getInstance(context1, bmwMake);
    printout("In context " + context2 + " looking for " + bmwMake + " got " + 
      car.getMake() + " back\n");

    return 1;
  }
}

bind(IProgram).to(CProgram);
