package systems.vos.wisey.compiler.tests;

import wisey.lang.IProgram;

node NElement {
  receive int mValue;
  state NElement mPrevious;
  state NElement* mNext;

  public void setNext(NElement* next) {
    mNext = next;
  }

  public NElement getNext() {
    return mNext;
  }

  public int getValue() {
    return mValue;
  }
}

controller CProgram implements IProgram {

  public int run(immutable string[] arguments) override {
    NElement* first = build(NElement).withValue(1).onHeap();
    NElement* second = build(NElement).withPrevious(first).withValue(2).onHeap();
    first.setNext(second);

    int sum;
    NElement iterator = first;
    while (iterator != null) {
      sum = sum + iterator.getValue();
      iterator = iterator.getNext();
    }

    return sum;
  }
}

bind(IProgram).to(CProgram);
