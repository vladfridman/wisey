package systems.vos.wisey.compiler.tests;

import wisey.data.CReferenceMap;
import wisey.lang.IProgram;

model MCar {
  string mMake;

  public string getMake() {
    return mMake;
  }
}

controller CProgram implements IProgram {
  inject CReferenceMap* mMap.withSize(CReferenceMap.DEAFUALT_SIZE);

  public int run(immutable string[] arguments) override {
    MCar* toyota = builder(MCar).withMake("Toyota").build(); 
    MCar* bmw = builder(MCar).withMake("BMW").build(); 
    MCar* mercedes = builder(MCar).withMake("Mercedes").build();

    mMap.put(toyota.getMake(), toyota);
    mMap.put(bmw.getMake(), bmw);
    mMap.put(bmw.getMake(), bmw);
    mMap.put(mercedes.getMake(), mercedes);

    MCar car = mMap.get(toyota.getMake());
    printout("Lookup " + toyota.getMake() + ": " + car.getMake() + "\n");
    car = mMap.get(bmw.getMake());
    printout("Lookup " + bmw.getMake() + ": " + car.getMake() + "\n");
    car = mMap.get(mercedes.getMake());
    printout("Lookup " + mercedes.getMake() + ": " + car.getMake() + "\n");

    mMap.erase(bmw.getMake());
    car = mMap.get(bmw.getMake());
    if (car == null) {
      printout("BMW was erased\n");
    } else {
      printout("BMW is still there\n");
    }

    mMap.erase(toyota.getMake());
    mMap.erase(bmw.getMake());
    mMap.erase(mercedes.getMake());

    car = mMap.get(toyota.getMake());
    if (car == null) {
      printout("Toyota was erased\n");
    } else {
      printout("Toyota is still there\n");
    }
    car = mMap.get(mercedes.getMake());
    if (car == null) {
      printout("Mercedes was erased\n");
    } else {
      printout("Mercedes is still there\n");
    }

    return 1;
  }
}

bind(IProgram).to(CProgram);
