package systems.vos.wisey.compiler.tests;

import wisey.lang.IProgram;
import wisey.threads.CContextManager;

controller CCar {
  receive string mMake;

  public string getMake() {
    return mMake;
  }
}

controller CContext {

}

controller CProgram implements IProgram {
  inject CContextManager* mContextManager;
  inject CContext* mContext;

  public long run(immutable string[] arguments) override {
    string mycontext = "mycontext";
    string toyotaMake = "Toyota";
    CCar* toyota = injector(CCar).withMake(toyotaMake).inject(); 

    mContextManager.setContext(mycontext, mContext);
    mContextManager.setInstance(mycontext, toyotaMake, toyota);
    CCar car = mContextManager.getInstance(mycontext, toyotaMake);
    printout("In context " + mycontext + " looking for " + toyotaMake + " got " + 
      car.getMake() + " back\n");
    car = null;

    mContextManager.eraseContext(mycontext);
    mContextManager.getInstance(mycontext, toyotaMake);

    return 1;
  }
}

bind(IProgram).to(CProgram);
