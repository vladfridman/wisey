%{
#include <string>
#include "node.hpp"
#include "y.tab.h"
#define SAVE_TOKEN yylval.string = new std::string(yytext, yyleng)
#define TOKEN(t) (yylval.token = t)
extern "C" int yywrap() { return 1; }
%}

%option yylineno

%%

[ \t\n]                 ;
"return"                return TOKEN(TRETURN);
"="                     return TOKEN('=');
"=="                    return TOKEN(TCEQ);
"!="                    return TOKEN(TCNE);
"<"                     return TOKEN(TCLT);
"<="                    return TOKEN(TCLE);
">"                     return TOKEN(TCGT);
">="                    return TOKEN(TCGE);
"("                     return TOKEN('(');
")"                     return TOKEN(')');
"{"                     return TOKEN('{');
"}"                     return TOKEN('}');
"."                     return TOKEN('.');
","                     return TOKEN(',');
"+"                     return TOKEN('+');
"-"                     return TOKEN('-');
"*"                     return TOKEN('*');
"/"                     return TOKEN('/');
";"                     return TOKEN(';');
[a-zA-Z_][a-zA-Z0-9_]*  SAVE_TOKEN; return TIDENTIFIER;
[0-9]+.[0-9]+           SAVE_TOKEN; return TDOUBLE;
[0-9]+                  SAVE_TOKEN; return TINTEGER;
.                       printf("Unknown token!n"); yyterminate();

%%

