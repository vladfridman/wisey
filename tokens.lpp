%{
  #include <string>
  #include "node.hpp"
  #include "y.tab.h"
  #define SAVE_TOKEN yylval.string = new std::string(yytext, yyleng)
  #define TOKEN(t) (yylval.token = t)
  extern "C" int yywrap() { return 1; }
%}

%option yylineno

%%

[ \t\n]                 ;
"int"                   return TOKEN(TTYPEINT);
"long"                  return TOKEN(TTYPELONG);
"float"                 return TOKEN(TTYPEFLOAT);
"double"                return TOKEN(TTYPEDOUBLE);
"return"                return TOKEN(TRETURN);
"="                     return TOKEN('=');
"=="                    return TOKEN(TCEQ);
"!="                    return TOKEN(TCNE);
"<"                     return TOKEN('<');
"<="                    return TOKEN(TCLE);
">"                     return TOKEN('>');
">="                    return TOKEN(TCGE);
"("                     return TOKEN('(');
")"                     return TOKEN(')');
"{"                     return TOKEN('{');
"}"                     return TOKEN('}');
"."                     return TOKEN('.');
","                     return TOKEN(',');
"+"                     return TOKEN('+');
"-"                     return TOKEN('-');
"*"                     return TOKEN('*');
"/"                     return TOKEN('/');
":"                     return TOKEN(':');
"?"                     return TOKEN('?');
";"                     return TOKEN(';');
"&&"                    return TOKEN(TANDOP);
"||"                    return TOKEN(TOROP);
[a-zA-Z_][a-zA-Z0-9_]*  SAVE_TOKEN; return TIDENTIFIER;
[0-9]+.[0-9]+           SAVE_TOKEN; return TDOUBLE;
[0-9]+                  SAVE_TOKEN; return TINTEGER;
.                       printf("Unknown token!n"); yyterminate();

%%

