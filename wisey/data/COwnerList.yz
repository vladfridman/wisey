package wisey.data;

/**
 * Link list of owner references
 */
controller COwnerList {

  inject CPointerList* mPointerList;

  /**
   * Appends a key/value pair to the beginning of the list
   */
  public void append(::llvm::i8::pointer key, ::wisey::object* value) {
    NElement* element = builder(NElement).withKey(key).withValue(value).build();
    mPointerList.append(key, element);
  }

  /**
   * Returns the fist object for the given key
   */
  public ::wisey::object get(::llvm::i8::pointer key) {
    CPointerList.IListElement element = mPointerList.get(key);
    return element ? ((NElement) element).getValue() : null;
  }

  /**
   * Erases all object with the given key
   */
  public void erase(::llvm::i8::pointer key) {
    mPointerList.erase(key);
  }

  /**
   * Represents list element where value field is of object owner type
   */
  public node NElement implements CPointerList.IListElement {
    fixed ::llvm::i8::pointer mKey;
    fixed ::wisey::object* mValue;
    state NElement* mNext;

    public ::wisey::object getValue() {
      return mValue;
    }

    public ::llvm::i8::pointer getKey() override {
      return mKey;
    }

    public void setNext(CPointerList.IListElement* element) override {
      mNext = element;
    }

    public CPointerList.IListElement getNext() override {
      return mNext;
    }

    public CPointerList.IListElement* takeNext() override {
      return mNext;
    }
  }
}