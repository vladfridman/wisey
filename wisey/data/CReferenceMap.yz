package wisey.data;

/**
 * Map of references to wisey objects
 */
controller CReferenceMap {

  inject immediate ::llvm::i8::pointer* mStdMap.withConstructor(mapCreate).withDestructor(mapDestroy);

  /**
   * Puts a reference to an object into the map according keyed by the given key
   */
  public void put(::llvm::i8::pointer key, ::wisey::object value) {
    ::llvm::function::stl_map_put_reference(mStdMap, key, value);
  }

  /**
   * Looks up a reference to an object given by the key
   */
  public ::wisey::object get(::llvm::i8::pointer key) {
    return ::llvm::function::stl_map_get(mStdMap, key);
  }

  /**
   * Creates an instance of the CReferenceMap
   */
  public static CReferenceMap* create() {
    return injector(CReferenceMap).inject();
  }

  /**
   * Erases entries in the hashmap with the given key
   */
  public void erase(::llvm::i8::pointer key) {
    ::llvm::function::stl_map_erase_reference(mStdMap, key);
  }

  /**
   * Clears the map
   */
  public void clear() {
    ::llvm::function::stl_map_of_references_clear(mStdMap);
  }

  private ::llvm::function ::llvm::i8::pointer mapCreate() {
    return ::llvm::function::stl_map_create();
  }

  private ::llvm::function ::llvm::void mapDestroy(::llvm::i8::pointer map) {
    ::llvm::function::stl_map_of_references_clear(map);
    ::llvm::function::stl_map_destroy(map);
  }
}