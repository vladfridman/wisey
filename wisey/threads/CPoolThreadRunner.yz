package wisey.threads;

/**
 * Uses pthread library to start a pool thread
 */
controller CPoolThreadRunner implements IThreadRunner {
  state ::llvm::struct::_opaque_pthread_t::pointer mMyNativeThread;

  /**
   * Creates new posix thread that calls runBridge function that in turn calls thread's run method
   */
  public void createThread(IThread poolThread) {
    if (mMyNativeThread) {
      return;
    }
    ::llvm::function::pthread_create(::llvm::reference(mMyNativeThread), 
                                     (::llvm::struct::_opaque_pthread_attr_t::pointer) null, 
                                     IThreadRunner.runBridge, 
                                     (::llvm::i8::pointer) poolThread);
  }

  /**
   * Tells whether thread has started
   */
  public boolean isStarted() {
    return mMyNativeThread;
  }

  /**
   * Cancel execution of the worker thread
   */
  public void cancelThread() {
    ::llvm::function::pthread_cancel(mMyNativeThread);
  }

  /**
   * Exits thread
   */
  public void exitThread() {
    ::llvm::function::pthread_exit((::llvm::i8::pointer) null);
  }
}