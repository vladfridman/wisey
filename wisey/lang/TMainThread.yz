package wisey.lang;

import wisey.lang.threads.CDefaultWorker;
import wisey.lang.threads.IWorkerThread;

/**
 * Represents main thread where the program runs
 */
thread TMainThread implements IWorkerThread {
  inject CDefaultWorker* mDefaultWorker;
  inject CProgramRunner* mProgramRunner;

  public void work() {
    MProgramResult* programResult = mProgramRunner.run();
    thread.send(programResult);
  }

  public void start() exposed {
    mDefaultWorker.startWorker(this);
  }

  public boolean hasStarted() exposed {
    return mDefaultWorker.hasStarted();
  }

  public boolean hasResult() exposed {
    return mDefaultWorker.hasResult();
  }

  public boolean wasCancelled() exposed {
    return mDefaultWorker.wasCancelled();
  }

  public ::wisey::model* awaitResult() exposed {
    return mDefaultWorker.awaitResult();
  }

  public void cancel() exposed {
    mDefaultWorker.cancel();
  }

  public ::wisey::model* send(::wisey::model* message) {
    return mDefaultWorker.send(message);
  }

  public CCallStack getCallStack() {
    return mDefaultWorker.getCallStack();
  }
}
