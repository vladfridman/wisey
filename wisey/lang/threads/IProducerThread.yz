package wisey.lang.threads;

import wisey.lang.CCallStack;

/**
 * Represents a thread of execution. All thread objects must implement this interface.
 */
interface IProducerThread extends IThread {

  /**
   * Starts the thread
   */
  void start() exposed;

  /**
   * Tells whether the worker thread has started running
   */
  boolean hasStarted() exposed;
  
  /**
   * Tells whether the worker thread has result ready
   */
  boolean hasResult() exposed;
  
  /**
   * Tells whether the worker thread was cancelled
   */
  boolean wasCancelled() exposed;

  /**
   * Cancel expecution of the worker thread
   */
  void cancel() exposed;

  /**
   * Consume one result and return it. If there are no results return null.
   */
  ::wisey::model* consume() exposed;

  /**
   * This method is called when thread is started
   */ 
  void produce();

}
