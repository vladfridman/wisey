package wisey.lang;

/**
 * String model is an immutable representation of a string
 */
model MString {

  immutable char[]* mContent;

  /**
   * Creates an MString from a string literal
   */
  public static MString* createFromString(string input) {
    return memcopyAndBuild(input, input.getLength() + 1);
  }

  /**
   * Creates an MString from a null terminated char array
   */
  public static MString* createFromCharArray(char[] input) {
    return memcopyAndBuild(input, input.getSize());
  }

  /**
   * Creates an MString from a null terminated immutable char array
   */
  public static MString* createFromImmutableCharArray(immutable char[] input) {
    return memcopyAndBuild(input, input.getSize());
  }

  /**
   * Returns the string length
   */
  public long getLength() {
    long size = mContent.getSize();
    return size ? size - 1 : 0l;
  }

  /**
   * Creates a copy of the string
   */
  public MString* copy() {
    long length = mContent.getSize();
    char[]* buffer = new char[length];
    MSystem.memcopy(buffer, mContent, length);
    return builder(MString).withContent(buffer).build();
  }

  /**
   * Returns char array for this string
   */
  public immutable char[] getContent() {
    return mContent;
  }

  private static MString* memcopyAndBuild(::llvm::i8::pointer source, long length) {
    char[]* buffer = new char[length];
    MSystem.memcopy(buffer, source, length);
    return builder(MString).withContent(buffer).build();    
  }
}