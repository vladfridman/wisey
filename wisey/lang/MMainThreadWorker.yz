package wisey.lang;

import wisey.threads.CCallStack;
import wisey.threads.CWorkerThread;
import wisey.threads.IWorker;
import wisey.threads.MThreadBoundaryException;

/**
 * This class is the worker for the main thread, it injects the program and sends the result
 */
model MMainThreadWorker implements IWorker {

  /**
   * This method is called from main() function automatically generated by compiler
   */
  public static int startMainThread() {
    CWorkerThread* workerThread = injector(CWorkerThread).inject();
    MMainThreadWorker* mainThreadWorker = builder(MMainThreadWorker).build();
    workerThread.start(mainThreadWorker);
    MProgramResult* result = workerThread.awaitResult();
    if (result == null) {
      printerr("Main thread ended without a result\n");
      return 1;
    }
    return result.getResult();
  }

  public void work() throws MThreadBoundaryException override {
    IProgram* program = injector(IProgram).inject();
    MProgramResult* programResult = builder(MProgramResult).withResult(program.run()).build();
    thread.send(programResult);
  }

  /**
   * Represents program result
   */
  public model MProgramResult {
    int mResult;

    public int getResult() {
      return mResult;
    }
  }
}
