package wisey.lang;

/**
 * Keeps track of the method call stack and can print out a strack trace
 */
controller CThread {
  public constant int CALL_STACK_SIZE = 1024;

  inject NCallStackNode*[CALL_STACK_SIZE]* mCallStack;
  state int mCallIStackIndex;

  /**
   * Pushes a new method on the call stack
   */
  public void pushStack(string objectName, 
                        string methodName, 
                        string fileName, 
                        int lineNumber) {
    NCallStackNode* newNode = builder(NCallStackNode)
      .withObjectName(objectName)
      .withMethodName(methodName)
      .withFileName(fileName)
      .withLineNumber(lineNumber)
      .build();

    mCallStack[mCallIStackIndex] = newNode;
    mCallIStackIndex++;
  }

  /**
   * Pops the method call stack
   */
  public void popStack() {
    mCallStack[mCallIStackIndex] = null;
    mCallIStackIndex--;
  }

  /**
   * Dumps the call stack to standart output
   */
  public void dumpStack() {
    for (int i = mCallIStackIndex - 1; i >= 0; i--) {
      NCallStackNode current = mCallStack[i];
      printout(current.getObjectName() + "." + current.getMethodName() + "(" + 
        current.getFileName() + ":" + current.getLineNumber() + ")\n");
    }
  }

  /**
   * Print a stack trace for an exception.
   *
   * The last element in the stack trace is the call to this method and is not printed
   */
  public void reportException(IException exception) {
    printerr("Unhandled exception " + exception.getName() + "\n");
    for (int i = mCallIStackIndex - 1; i >= 0; i--) {
      NCallStackNode current = mCallStack[i];
      printerr("  at " + current.getObjectName() + "." + current.getMethodName() + "(" +
        current.getFileName() + ":" + current.getLineNumber() + ")\n");
    }
  }

  /**
   * An element of the stack structore used to store method call stack
   */
  private node NCallStackNode {
    string mObjectName;
    string mMethodName;
    string mFileName;
    int mLineNumber;

    public string getObjectName() {
      return mObjectName;
    }

    public string getMethodName() {
      return mMethodName;
    }

    public string getFileName() {
      return mFileName;
    }

    public int getLineNumber() {
      return mLineNumber;
    }
  }
}
