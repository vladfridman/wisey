package wisey.lang;

/**
 * Represents program result
 */
model MProgramResult {
  int mResult;

  public int getResult() {
    return mResult;
  }
}

/**
 * Injects program controller and runs it
 */
controller CProgramRunner {
  inject IProgram* mProgram;

  public MProgramResult* run() {
    try {
      return builder(MProgramResult).withResult(mProgram.run()).build();
    } catch (MNullPointerException* exception) {
      thread.getCallStack().reportException(exception);
      exit(1);
    } catch (MReferenceCountException* exception) {
      thread.getCallStack().reportException(exception);
      string ending = exception.getReferenceCount() > 1 ? "s" : "";
      printerr("Details: Object referenced by expression still has " + 
        exception.getReferenceCount() + " active reference" + ending + "\n");
      exit(1);
    } catch (MCastException* exception) {
      thread.getCallStack().reportException(exception);
      printerr("Details: Can not cast from " + exception.getFromType() + " to " + 
        exception.getToType() + "\n");
      exit(1);
    } catch (MArrayIndexOutOfBoundsException* exception) {
      thread.getCallStack().reportException(exception);
      printerr("Details: Index " + exception.getIndex() + " is used on array of size " + 
        exception.getArraySize() + "\n");
      exit(1);
    } catch (MStackOverflowException* exception) {
      thread.getCallStack().reportException(exception);
      exit(1);
    }
  }
}
