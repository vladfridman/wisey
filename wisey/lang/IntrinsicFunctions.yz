/**
 * Standard exit method to terminate program execution
 */
::llvm::function ::llvm::void exit(::llvm::i32);

/**
 * printf fucntion for printing to sandard output
 */
::llvm::function ::llvm::i32 printf(::llvm::i8::pointer, ...);

/**
 * fprintf fucntion for printing to file or stderr
 */
::llvm::function ::llvm::i32 fprintf(::llvm::struct::__sFILE::pointer, ::llvm::i8::pointer, ...);

/**
 * fgets function for reading from a file
 */
::llvm::function ::llvm::i8::pointer fgets(::llvm::i8::pointer, ::llvm::i32, ::llvm::struct::__sFILE::pointer);

/**
 * function to get string length
 */
::llvm::function ::llvm::i64 strlen(::llvm::i8::pointer);

/**
 * Compares two strins and returns zero if they are equal
 */
::llvm::function ::llvm::i32 strcmp(::llvm::i8::pointer, ::llvm::i8::pointer);

/**
 * Prints to a character array
 */
::llvm::function ::llvm::i32 sprintf(::llvm::i8::pointer, ::llvm::i8::pointer, ...);

/**
 * Reads from a string
 */
::llvm::function ::llvm::i32 sscanf(::llvm::i8::pointer, ::llvm::i8::pointer, ...);

/**
 * This is used to throw an exception
 */
::llvm::function ::llvm::void __cxa_throw(::llvm::i8::pointer, 
                                          ::llvm::i8::pointer, 
                                          ::llvm::i8::pointer);

/**
 * Allocates memory for exception object
 */
::llvm::function ::llvm::i8::pointer __cxa_allocate_exception(::llvm::i64);

/**
 * This is called when unexpected exception is cought
 */
::llvm::function ::llvm::void __cxa_call_unexpected(::llvm::i8::pointer);

/**
 * Function that is called at the begining of a catch in exception handling
 */
::llvm::function ::llvm::i8::pointer __cxa_begin_catch(::llvm::i8::pointer);

/**
 * Function that is called at the end of a catch in exception handling
 */
::llvm::function ::llvm::void __cxa_end_catch();

/**
 * Returns the adjusted pointer to the exception object
 */
::llvm::function ::llvm::i8::pointer __cxa_get_exception_ptr(::llvm::i8::pointer);

/**
 * Default personality function for exception handling
 */
::llvm::function ::llvm::i32 __gxx_personality_v0(...);

/**
 * Function for determining the id of a thrown exception
 */
::llvm::function ::llvm::i32 "llvm.eh.typeid.for"(::llvm::i8::pointer);

/**
 * Function for copying memory
 */
::llvm::function ::llvm::void llvm.memcpy.p0i8.p0i8.i64(::llvm::i8::pointer, 
                                                        ::llvm::i8::pointer, 
                                                        ::llvm::i64, 
                                                        ::llvm::i32, 
                                                        ::llvm::i1);

/**
 * Function for setting memory
 */
::llvm::function ::llvm::void llvm.memset.p0i8.i64(::llvm::i8::pointer, 
                                                   ::llvm::i8, 
                                                   ::llvm::i64, 
                                                   ::llvm::i32, 
                                                   ::llvm::i1);
