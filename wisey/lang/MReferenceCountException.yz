package wisey.lang;

/**
 * Thrown when attempting to destroy an object that still has active references pointing to it
 */
model MReferenceCountException implements IException {
  receive string mObjectType;
  receive long mReferenceCount;
  receive IException mNestedException;

  public NString* report() override {
    if (mNestedException instanceof MReferenceCountException) {
      return mNestedException.report();
    }

    NString* message = callstack.reportException(this);
    string ending = mReferenceCount > 1 ? "s" : "";
    message.appendString("Details: Object referenced by expression of type ");
    message.appendString(mObjectType);
    message.appendString(" still has ");
    message.appendNString(NString.createFromLong(mReferenceCount));
    message.appendString(" active reference");
    message.appendString(ending);
    message.appendString("\n");

    if (mNestedException == null) {
      return message;
    }
    message.appendString("Was thrown from memory clean up after ");
    message.appendString(MSystem.getOriginalObjectTypeName(mNestedException));
    message.appendString("\n");
    message.appendNString(mNestedException.report());

    return message;
  }

  /**
   * Returns the number of references that are still pointing to the object
   */
  public long getReferenceCount() {
    return mReferenceCount;
  }

  /**
   * Returns the object type name
   */
  public string getObjectType() {
    return mObjectType;
  }
}
