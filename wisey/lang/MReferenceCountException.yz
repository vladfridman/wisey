package wisey.lang;

/**
 * Thrown when attempting to destroy an object that still have active references pointing to it
 */
model MReferenceCountException implements IException {
  receive string mObjectType;
  receive long mReferenceCount;
  receive IException mNestedException;

  public void report() override {
    if (mNestedException instanceof MReferenceCountException) {
      mNestedException.report();
      return;
    }

    callstack.reportException(this);
    string ending = mReferenceCount > 1 ? "s" : "";
    printerr("Details: Object referenced by expression of type " +
      mObjectType +  " still has " + mReferenceCount + 
      " active reference" + ending + "\n");
    
    if (mNestedException == null) {
      return;
    }
    printerr("Was thrown from memory clean up after " + 
      MSystem.getOriginalObjectTypeName(mNestedException) + "\n");
    mNestedException.report();
  }

  /**
   * Returns the number of references that are still pointing to the object
   */
  public long getReferenceCount() {
    return mReferenceCount;
  }

  /**
   * Returns the object type name
   */
  public string getObjectType() {
    return mObjectType;
  }
}
